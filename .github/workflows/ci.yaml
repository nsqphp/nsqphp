name: CI

on:
    - pull_request
    - push

jobs:
    tests:
        name: Tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-latest
                php:
                    - '8.0'
                dependencies:
                    - lowest
                    - highest
        services:
            nsqd:
                image: nsqio/nsq:v1.2.0
                options: --entrypoint /nsqd
                ports:
                    - 4150:4150
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: pcov

            -   name: Setup Problem Matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Determine Composer cache directory
                id: composer-cache
                run: echo "::set-output name=directory::$(composer config cache-dir)"

            -   name: Cache Composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.directory }}
                    key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.dependencies }}-composer-

            -   name: Install highest dependencies
                run: composer update --no-progress --no-interaction --prefer-dist
                if: ${{ matrix.dependencies == 'highest' }}

            -   name: Install lowest dependencies
                run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest
                if: ${{ matrix.dependencies == 'lowest' }}

            -   name: Run tests
                run: vendor/bin/phpunit --coverage-clover=build/coverage-report.xml

            -   name: Upload code coverage
                uses: codecov/codecov-action@v1
                with:
                    file: build/coverage-report.xml

    php-cs-fixer:
        name: PHP-CS-Fixer
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer update --no-progress --no-interaction --prefer-dist

            -   name: Run script
                run: composer cs-check

    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer update --no-progress --no-interaction --prefer-dist

            -   name: Run script
                run: composer phpstan

    psalm:
        name: Psalm
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer update --no-progress --no-interaction --prefer-dist

            -   name: Run script
                run: vendor/bin/psalm --output-format=github

    infection:
        name: Infection
        runs-on: ubuntu-latest
        services:
            nsqd:
                image: nsqio/nsq:v1.2.0
                options: --entrypoint /nsqd
                ports:
                    - 4150:4150
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    coverage: pcov

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install dependencies
                run: composer update --no-progress --no-interaction --prefer-dist

            -   name: Run script
                env:
                    STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
                run: |
                    git fetch --depth=1 origin $GITHUB_BASE_REF
                    php vendor/bin/infection -j2 --git-diff-filter=A --git-diff-base=origin/$GITHUB_BASE_REF --logger-github --ignore-msi-with-no-mutations --only-covered
